{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../silver-mirror.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../header/header.component\";\nexport class RegisterComponent {\n  constructor(formBuilder, silverService, router) {\n    this.formBuilder = formBuilder;\n    this.silverService = silverService;\n    this.router = router;\n    this.loading = false;\n    this.submitted = false;\n  }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', Validators.required],\n      phone: ['']\n    });\n  }\n  createAccount() {\n    // stop here if form is invalid\n    /*   if (this.form.invalid) {\r\n        return;\r\n    } */\n    this.silverService.addNewClient();\n    console.log(\"submitted\");\n    console.log(this.form.value);\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SilverMirrorService), i0.ɵɵdirectiveInject(i3.Router));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 19,\n  vars: 1,\n  consts: [[\"id\", \"main\"], [1, \"login\", \"create-account\"], [1, \"container\", \"flex-container\"], [1, \"grid\"], [1, \"heading-4\"], [1, \"create-account-form\", 3, \"formGroup\", \"ngSubmit\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Email Address\", \"formControlName\", \"email\"], [\"type\", \"text\", \"id\", \"first-name\", \"name\", \"first-name\", \"placeholder\", \"First Name\", \"formControlName\", \"firstName\"], [\"type\", \"text\", \"id\", \"last-name\", \"name\", \"last-name\", \"placeholder\", \"Last Name\", \"formControlName\", \"lastName\"], [\"type\", \"tel\", \"id\", \"phone-number\", \"name\", \"phone-number\", \"placeholder\", \"Phone Number\", \"formControlName\", \"phone\"], [\"type\", \"submit\", \"value\", \"Continue\", 1, \"btn\"], [1, \"xx-small\"], [\"href\", \"#\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-header\");\n      i0.ɵɵelementStart(1, \"main\", 0)(2, \"section\", 1)(3, \"div\", 2)(4, \"article\", 3)(5, \"h1\", 4);\n      i0.ɵɵtext(6, \"Login or Create an Account to Check Availability\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"form\", 5);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.createAccount();\n      });\n      i0.ɵɵelement(8, \"input\", 6)(9, \"input\", 7)(10, \"input\", 8)(11, \"input\", 9)(12, \"input\", 10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"p\", 11);\n      i0.ɵɵtext(15, \"Your personal data will be used to support your experience throughout this website, to manage access to your account, and for other purposes described in our \");\n      i0.ɵɵelementStart(16, \"a\", 12);\n      i0.ɵɵtext(17, \"privacy policy\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(18, \".\");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.HeaderComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;AASnE,OAAM,MAAOC,iBAAiB;EAI5BC,YACUC,WAAwB,EAAQC,aAAkC,EAASC,MAAc;IAAzF,gBAAW,GAAXF,WAAW;IAAqB,kBAAa,GAAbC,aAAa;IAA8B,WAAM,GAANC,MAAM;IAH3F,YAAO,GAAG,KAAK;IACf,cAAS,GAAG,KAAK;EAGf;EACFC,QAAQ;IACN,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC/BC,SAAS,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MAChCG,KAAK,EAAE,CAAC,EAAE;KACb,CAAC;EACN;EAGEC,aAAa;IACX;IACF;;;IAGF,IAAI,CAACV,aAAa,CAACW,YAAY,EAAE;IAC7BC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACV,IAAI,CAACW,KAAK,CAAC;EAC9B;;AAzBWjB,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV9BC,6BAAyB;MAEzBA,+BAAgB;MAKkBA,gEAAgD;MAAAA,iBAAK;MAE3EA,+BAAkF;MAAzDA;QAAA,OAAYC,mBAAe;MAAA,EAAC;MACjDD,2BAAiG;MASrGA,iBAAO;MAGXA,+BAAkB;MACMA,+KAA8J;MAAAA,8BAAY;MAAAA,+BAAc;MAAAA,iBAAI;MAAAA,kBAAC;MAAAA,iBAAI;;;MAd/MA,eAAkB;MAAlBA,oCAAkB","names":["Validators","RegisterComponent","constructor","formBuilder","silverService","router","ngOnInit","form","group","firstName","required","lastName","email","phone","createAccount","addNewClient","console","log","value","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\wamp64\\www\\SMP2\\silver-mirror-phaseII\\silver-mirror-phaseII\\src\\app\\register\\register.component.ts","C:\\wamp64\\www\\SMP2\\silver-mirror-phaseII\\silver-mirror-phaseII\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { SilverMirrorService } from '../silver-mirror.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent {\n  form!: FormGroup;\n  loading = false;\n  submitted = false;\n  constructor(\n    private formBuilder: FormBuilder,public silverService: SilverMirrorService,private router: Router\n) { }\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n        firstName: ['', Validators.required],\n        lastName: ['', Validators.required],\n        email: ['', Validators.required],\n        phone: ['']\n    });\n}\n\n\n  createAccount(){\n    // stop here if form is invalid\n  /*   if (this.form.invalid) {\n      return;\n  } */\nthis.silverService.addNewClient();\n    console.log(\"submitted\");\n    console.log(this.form.value);\n  }\n\n}\n","<app-header></app-header>\n\n<main id=\"main\">\n<section class=\"login create-account\">\n    <div class=\"container flex-container\">\n\n        <article class=\"grid\">\n            <h1 class=\"heading-4\">Login or Create an Account to Check Availability</h1>\n\n            <form [formGroup]=\"form\" (ngSubmit)=\"createAccount()\" class=\"create-account-form\">\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email Address\" formControlName=\"email\" >\n                <input type=\"text\" id=\"first-name\" name=\"first-name\" placeholder=\"First Name\" formControlName=\"firstName\">\n                <input type=\"text\" id=\"last-name\" name=\"last-name\" placeholder=\"Last Name\" formControlName=\"lastName\">\n                <input type=\"tel\" id=\"phone-number\" name=\"phone-number\" placeholder=\"Phone Number\" formControlName=\"phone\">\n                <!--<div class=\"subscription-checkbox\">\n                    <input type=\"checkbox\" id=\"email-subscription\" name=\"email-subscription\" value=\"yes\">\n                    <label for=\"email-subscription\">Join Our Email List</label>\n                </div>-->\n                <input class=\"btn\" type=\"submit\" value=\"Continue\">\n            </form>\n        </article>\n\n        <div class=\"grid\">\n            <p class=\"xx-small\">Your personal data will be used to support your experience throughout this website, to manage access to your account, and for other purposes described in our <a href=\"#\">privacy policy</a>.</p>\n        </div>\n\n    </div>\n</section>\n</main>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}