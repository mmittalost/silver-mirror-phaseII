{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class LocationGroupPipe {\n  transform(collection, property) {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    if (!collection) {\n      return null;\n    }\n    const groupedCollection = collection.reduce((previous, current) => {\n      if (!previous[current[property]]) {\n        previous[current[property]] = [current];\n      } else {\n        previous[current[property]].push(current);\n      }\n      return previous;\n    }, {});\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({\n      key,\n      value: groupedCollection[key]\n    }));\n  }\n}\nLocationGroupPipe.ɵfac = function LocationGroupPipe_Factory(t) {\n  return new (t || LocationGroupPipe)();\n};\nLocationGroupPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"locationGroup\",\n  type: LocationGroupPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,iBAAiB;EAE5BC,SAAS,CAACC,UAAiB,EAAEC,QAAgB;IAC3C;IACA,IAAG,CAACD,UAAU,EAAE;MACZ,OAAO,IAAI;;IAGf,MAAME,iBAAiB,GAAGF,UAAU,CAACG,MAAM,CAAC,CAACC,QAAQ,EAAEC,OAAO,KAAG;MAC7D,IAAG,CAACD,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,EAAE;QAC7BG,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,GAAG,CAACI,OAAO,CAAC;OAC1C,MAAM;QACHD,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAAC,CAACK,IAAI,CAACD,OAAO,CAAC;;MAG7C,OAAOD,QAAQ;IACnB,CAAC,EAAE,EAAE,CAAC;IAEN;IACA,OAAOG,MAAM,CAACC,IAAI,CAACN,iBAAiB,CAAC,CAACO,GAAG,CAACC,GAAG,KAAK;MAAEA,GAAG;MAAEC,KAAK,EAAET,iBAAiB,CAACQ,GAAG;IAAC,CAAE,CAAC,CAAC;EAC5F;;AApBWZ,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;;QAAjBA,iBAAiB;EAAAc;AAAA","names":["LocationGroupPipe","transform","collection","property","groupedCollection","reduce","previous","current","push","Object","keys","map","key","value","pure"],"sourceRoot":"","sources":["C:\\wamp64\\www\\SMP2\\silver-mirror-phaseII\\silver-mirror-phaseII\\src\\app\\location-group.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'locationGroup'\n})\nexport class LocationGroupPipe implements PipeTransform {\n\n  transform(collection: any[], property: string): any[] {\n    // prevents the application from breaking if the array of objects doesn't exist yet\n    if(!collection) {\n        return null;\n    }\n\n    const groupedCollection = collection.reduce((previous, current)=> {\n        if(!previous[current[property]]) {\n            previous[current[property]] = [current];\n        } else {\n            previous[current[property]].push(current);\n        }\n\n        return previous;\n    }, {});\n\n    // this will return an array of objects, each object containing a group of objects\n    return Object.keys(groupedCollection).map(key => ({ key, value: groupedCollection[key] }));\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}