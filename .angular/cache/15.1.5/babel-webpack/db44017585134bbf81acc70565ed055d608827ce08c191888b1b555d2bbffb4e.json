{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SilverMirrorService {\n  constructor(http) {\n    this.http = http;\n    this.locationList$ = new BehaviorSubject([]);\n    this.serviceList$ = new BehaviorSubject([]);\n    this.getClientByEmail$ = new BehaviorSubject([]);\n    this.addNewClient$ = new BehaviorSubject([]);\n    this.getLocations();\n  }\n  getLocations() {\n    this.http.get('http://blvd.ost.agency/get_locations').subscribe(res => {\n      this.locationList$.next(res.data);\n      console.log(res.data);\n    });\n  }\n  getServices() {\n    this.http.get('http://blvd.ost.agency/get_services').subscribe(res => {\n      this.serviceList$.next(res.data);\n      console.log(res.data);\n    });\n  }\n  getClientByEmail() {\n    this.http.get('http://blvd.ost.agency/get_client_by_email').subscribe(res => {\n      this.serviceList$.next(res.data);\n      console.log(res.data);\n    });\n  }\n  addNewClient() {\n    this.http.get('http://blvd.ost.agency/get_client_by_email').subscribe(res => {\n      this.serviceList$.next(res.data);\n      console.log(res.data);\n    });\n  }\n}\nSilverMirrorService.ɵfac = function SilverMirrorService_Factory(t) {\n  return new (t || SilverMirrorService)(i0.ɵɵinject(i1.HttpClient));\n};\nSilverMirrorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SilverMirrorService,\n  factory: SilverMirrorService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAwC,MAAM;;;AAKtE,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAJxB,kBAAa,GAAyB,IAAIH,eAAe,CAAC,EAAE,CAAC;IAC7D,iBAAY,GAAyB,IAAIA,eAAe,CAAC,EAAE,CAAC;IAC5D,sBAAiB,GAAyB,IAAIA,eAAe,CAAC,EAAE,CAAC;IACjE,kBAAa,GAAyB,IAAIA,eAAe,CAAC,EAAE,CAAC;IAE3D,IAAI,CAACI,YAAY,EAAE;EACpB;EACAA,YAAY;IACX,IAAI,CAACD,IAAI,CACNE,GAAG,CAAC,sCAAsC,CAAC,CAC3CC,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACC,aAAa,CAACC,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MACjCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAEAG,WAAW;IACT,IAAI,CAACV,IAAI,CACNE,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACO,YAAY,CAACL,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EACAK,gBAAgB;IACd,IAAI,CAACZ,IAAI,CACNE,GAAG,CAAC,4CAA4C,CAAC,CACjDC,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACO,YAAY,CAACL,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;EAEAM,YAAY;IACV,IAAI,CAACb,IAAI,CACNE,GAAG,CAAC,4CAA4C,CAAC,CACjDC,SAAS,CAAEC,GAAQ,IAAI;MACtB,IAAI,CAACO,YAAY,CAACL,IAAI,CAACF,GAAG,CAACG,IAAI,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACL,GAAG,CAACG,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;;AAzCWT,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAgB,SAAnBhB,mBAAmB;EAAAiB,YAFlB;AAAM","names":["BehaviorSubject","SilverMirrorService","constructor","http","getLocations","get","subscribe","res","locationList$","next","data","console","log","getServices","serviceList$","getClientByEmail","addNewClient","factory","providedIn"],"sourceRoot":"","sources":["C:\\wamp64\\www\\SMP2\\silver-mirror-phaseII\\silver-mirror-phaseII\\src\\app\\silver-mirror.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { BehaviorSubject, concat, forkJoin, Subject, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SilverMirrorService {\n  locationList$: BehaviorSubject<any> = new BehaviorSubject([]);\n  serviceList$: BehaviorSubject<any> = new BehaviorSubject([]);\n  getClientByEmail$: BehaviorSubject<any> = new BehaviorSubject([]);\n  addNewClient$: BehaviorSubject<any> = new BehaviorSubject([]);\n  constructor(private http:HttpClient) {\n    this.getLocations();\n   }\n   getLocations() {\n    this.http\n      .get('http://blvd.ost.agency/get_locations')\n      .subscribe((res: any) => {\n        this.locationList$.next(res.data);\n        console.log(res.data);\n      });\n  }\n\n  getServices() {\n    this.http\n      .get('http://blvd.ost.agency/get_services')\n      .subscribe((res: any) => {\n        this.serviceList$.next(res.data);\n        console.log(res.data);\n      });\n  }\n  getClientByEmail() {\n    this.http\n      .get('http://blvd.ost.agency/get_client_by_email')\n      .subscribe((res: any) => {\n        this.serviceList$.next(res.data);\n        console.log(res.data);\n      });\n  }\n\n  addNewClient() {\n    this.http\n      .get('http://blvd.ost.agency/get_client_by_email')\n      .subscribe((res: any) => {\n        this.serviceList$.next(res.data);\n        console.log(res.data);\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}